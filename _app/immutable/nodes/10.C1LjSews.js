import"../chunks/DsnmJJEf.js";import"../chunks/pWYwiONT.js";import{p as m,f as g,s as e,b as h,a as u,c as f,g as t,d as r,n as y}from"../chunks/CxAHA0TZ.js";import{i as _}from"../chunks/C6ZI3i2n.js";import{T as s,a}from"../chunks/CE-4ZAAX.js";var v=g("<h1>Radio</h1> <p>To style the radio, add the “radio-color-size” class</p> <h2>Usage</h2> <p>Add the radio class to the input element to apply size, color, and state-based styles.</p> <!> <h2>Form</h2> <p>Use the <code>&lt;label&gt;</code> element as it is</p> <!> <h2>Styling</h2> <p>The radio class is a dynamic unocss shortcut so you can extend it</p> <!> <ul><li><strong>Syntax</strong>: <code>radio-[color]-[size]</code></li> <li><strong>Color</strong>: color of the radio</li> <li><strong>Size</strong>: Predefined sizes are <code>sm</code>, <code>md</code>, <code>lg</code>, <code>xl</code>, or pass a numeric value (<code>radio-5</code>)</li> <li><strong>Icon color</strong>: use the <code>text-color</code> class <blockquote><p>NOTE: If radio-lg is used, then the default color is <code>primary</code></p></blockquote></li></ul>",1);function S(c,n){m(n,!1),_();var d=v(),i=e(h(d),8);{let o=r(()=>a("radio","default"));s(i,{get demo(){return t(o)}})}var l=e(i,6);{let o=r(()=>a("radio","form"));s(l,{get demo(){return t(o)}})}var p=e(l,6);{let o=r(()=>a("radio","colors"));s(p,{get demo(){return t(o)}})}y(2),u(c,d),f()}export{S as component};
